{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country.service.mock\";\n//import { CountryService } from '../service/countries.service';\n//import { MatGridListModule } from '@angular/material/grid-list';\nexport class HomeComponent {\n  constructor(countryService) {\n    this.countryService = countryService;\n    this.countries = [];\n  }\n  ngOnInit() {\n    //this.countryService.getAllCountries().subscribe((data) => {\n    //  this.countries = data;\n    //});\n    this.countryService.getAllCountries().subscribe(data => {\n      this.countries = data;\n    });\n    console.log(this.countries);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.CountryServiceMock));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 49,\n  vars: 0,\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Hello, world!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Welcome to your new single-page application, built with:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"ul\");\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6, \"To help you get started, we've also set up:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"ul\")(8, \"li\")(9, \"strong\");\n      i0.ɵɵtext(10, \"Client-side navigation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \". For example, click \");\n      i0.ɵɵelementStart(12, \"em\");\n      i0.ɵɵtext(13, \"Counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \" then \");\n      i0.ɵɵelementStart(15, \"em\");\n      i0.ɵɵtext(16, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \" to return here.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"li\")(19, \"strong\");\n      i0.ɵɵtext(20, \"Angular CLI integration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \". In development mode, there's no need to run \");\n      i0.ɵɵelementStart(22, \"code\");\n      i0.ɵɵtext(23, \"ng serve\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \". It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"li\")(26, \"strong\");\n      i0.ɵɵtext(27, \"Efficient production builds\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \". In production mode, development-time features are disabled, and your \");\n      i0.ɵɵelementStart(29, \"code\");\n      i0.ɵɵtext(30, \"dotnet publish\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(31, \" configuration automatically invokes \");\n      i0.ɵɵelementStart(32, \"code\");\n      i0.ɵɵtext(33, \"ng build\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" to produce minified, ahead-of-time compiled JavaScript files.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"p\");\n      i0.ɵɵtext(36, \"The \");\n      i0.ɵɵelementStart(37, \"code\");\n      i0.ɵɵtext(38, \"ClientApp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \" subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any \");\n      i0.ɵɵelementStart(40, \"code\");\n      i0.ɵɵtext(41, \"ng\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \" command (e.g., \");\n      i0.ɵɵelementStart(43, \"code\");\n      i0.ɵɵtext(44, \"ng test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(45, \"), or use \");\n      i0.ɵɵelementStart(46, \"code\");\n      i0.ɵɵtext(47, \"npm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(48, \" to install extra packages into it.\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAGA;AACA;AAMA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,cAAkC;IAAlC,mBAAc,GAAdA,cAAc;IAFlC,cAAS,GAAc,EAAE;EAEiC;EAE1DC,QAAQ;IACN;IACA;IACA;IAEA,IAAI,CAACD,cAAc,CAACE,eAAe,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MACvD,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;IAEFE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;EAC7B;;AAfWP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,yBAAG;MAAAA,wEAAwD;MAAAA,iBAAI;MAC/DA,qBACK;MACLA,yBAAG;MAAAA,2DAA2C;MAAAA,iBAAI;MAClDA,0BAAI;MACUA,uCAAsB;MAAAA,iBAAS;MAAAA,sCAAqB;MAAAA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAACA,uBAAK;MAAAA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MAACA,iCAAe;MAAAA,iBAAK;MACxHA,2BAAI;MAAQA,wCAAuB;MAAAA,iBAAS;MAAAA,+DAA8C;MAAAA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAAAA,0KAAyJ;MAAAA,iBAAK;MAC7QA,2BAAI;MAAQA,4CAA2B;MAAAA,iBAAS;MAAAA,wFAAuE;MAAAA,6BAAM;MAAAA,+BAAc;MAAAA,iBAAO;MAACA,sDAAoC;MAAAA,6BAAM;MAAAA,yBAAQ;MAAAA,iBAAO;MAACA,+EAA6D;MAAAA,iBAAK;MAEjRA,0BAAG;MAAAA,qBAAI;MAAAA,6BAAM;MAAAA,0BAAS;MAAAA,iBAAO;MAACA,sIAAoH;MAAAA,6BAAM;MAAAA,mBAAE;MAAAA,iBAAO;MAACA,iCAAe;MAAAA,6BAAM;MAAAA,wBAAO;MAAAA,iBAAO;MAAAA,2BAAU;MAAAA,6BAAM;MAAAA,oBAAG;MAAAA,iBAAO;MAACA,oDAAkC;MAAAA,iBAAI","names":["HomeComponent","constructor","countryService","ngOnInit","getAllCountries","subscribe","data","countries","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Karuk\\source\\repos\\New folder\\Angular\\CountryApp\\CountryApp\\ClientApp\\src\\app\\home\\home.component.ts","C:\\Users\\Karuk\\source\\repos\\New folder\\Angular\\CountryApp\\CountryApp\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Country } from '../../Models/country.model';\r\nimport { CountryServiceMock } from '../service/country.service.mock';\r\n//import { CountryService } from '../service/countries.service';\r\n//import { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  countries: Country[] = [];\r\n\r\n  constructor(private countryService: CountryServiceMock) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.countryService.getAllCountries().subscribe((data) => {\r\n    //  this.countries = data;\r\n    //});\r\n\r\n    this.countryService.getAllCountries().subscribe((data) => {\r\n      this.countries = data;\r\n    });\r\n\r\n    console.log(this.countries);\r\n  }\r\n}\r\n","<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}